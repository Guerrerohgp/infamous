{"name":"Infamous","tagline":"A UI library.","body":"infamous\r\n========\r\n\r\nA UI library.\r\n\r\n[![NPM](https://nodei.co/npm/infamous.png)](https://nodei.co/npm/infamous/)\r\n\r\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/infamous/infamous?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\r\n\r\nGetting Started\r\n---------------\r\n\r\nThe following sample workflows show possible ways to install and start using infamous. These examples will refer to the [snippets](#snippets) at the end of the README.\r\n\r\n### browserify workflow\r\n\r\nInstall [nodejs](http://nodejs.org), then create `package.json` for your project.\r\n\r\n```\r\nnpm init # creates package.json\r\n```\r\n\r\nInstall [`browserify`](http://browserify.org) globally.\r\n\r\n```\r\nnpm install -g browserify\r\n```\r\n\r\nInstall infamous along with famous, famousify, and cssify into your project.\r\n\r\n```\r\nnpm install infamous famous famousify cssify --save\r\n```\r\n\r\nAdd the the famousify and cssify transforms to your package.json so it looks similar to the following.\r\n\r\n```json\r\n{\r\n  \"dependencies\": {\r\n    \"cssify\": \"^0.6.0\",\r\n    \"famous\": \"^0.3.4\",\r\n    \"famousify\": \"^0.1.5\",\r\n    \"infamous\": \"^0.0.15\"\r\n  },\r\n  \"browserify\": {\r\n    \"transform\": [\r\n      \"famousify\",\r\n      \"cssify\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nSuppose you have `src/app.js` containing [Snippet 1](#snippet-1) and `public/index.html` containing [Snippet 2](#snippet-2). Compile a bundle for production.\r\n\r\n```\r\nbrowserify src/app.js -o public/app.js\r\n```\r\n\r\nAlternatively, use [watchify](https://github.com/substack/watchify) to watch the filesystem for changes and re-compile automatically.\r\n\r\n```\r\nwatchify src/app.js -o public/app.js\r\n```\r\n\r\nInstall `serve` globally.\r\n\r\n```\r\nnpm install -g serve\r\n```\r\n\r\nServe the contents of the public folder.\r\n\r\n```\r\nserve public\r\n```\r\n\r\nVisit `localhost:3000` in your browser.\r\n\r\n### webpack workflow\r\n\r\nInstall [nodejs](http://nodejs.org), then create `package.json` for your project.\r\n\r\n```\r\nnpm init # creates package.json\r\n```\r\n\r\nInstall [`webpack`](http://webpack.github.io) globally.\r\n\r\n```\r\nnpm install -g webpack\r\n```\r\n\r\nInstall infamous along with famous, webpack, css-loader, and style-loader into your project.\r\n\r\n```\r\nnpm install infamous webpack famous css-loader style-loader --save\r\n```\r\n\r\nCreate webpack.config.js to configure webpack.\r\n\r\n```js\r\nvar webpack = require('webpack')\r\nmodule.exports = {\r\n    entry: \"./src/app.js\",\r\n    output: {\r\n        path: './public',\r\n        filename: \"app.js\"\r\n    },\r\n    module: {\r\n        loaders: [\r\n            { test: /\\.css$/, loader: \"style!css\" }\r\n        ]\r\n    },\r\n    resolve: {\r\n        alias: {\r\n            famous: 'famous/src'\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nSuppose you have `src/app.js` containing [Snippet 1](#snippet-1) and `public/index.html` containing [Snippet 2](#snippet-2). Compile a bundle for production.\r\n\r\n```\r\nwebpack\r\n```\r\n\r\nAlternatively, watch the filesystem for changes and re-compile automatically.\r\n\r\n```\r\nwebpack --watch\r\n```\r\n\r\nInstall `serve` globally.\r\n\r\n```\r\nnpm install -g serve\r\n```\r\n\r\nServe the contents of the public folder.\r\n\r\n```\r\nserve public\r\n```\r\n\r\nVisit `localhost:3000` in your browser.\r\n\r\n### jspm workflow\r\n\r\nInstall [nodejs](http://nodejs.org), then create `package.json` for your project.\r\n\r\n```\r\nnpm init # creates package.json\r\n```\r\n\r\nInstall [`jspm`](http://jspm.io) globally.\r\n\r\n```\r\nnpm install -g jspm\r\n```\r\n\r\nSet `jspm.directories.baseURL` in your package.json to `\"src\"`, similar to the following.\r\n\r\n```json\r\n{\r\n  \"jspm\": {\r\n    \"directories\": {\r\n      \"baseURL\": \"src\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nInstall infamous along with famous and css into your project.\r\n\r\n```\r\njspm install -y infamous famous css\r\n```\r\n\r\nSuppose you have `src/app.js` containing [Snippet 3](#snippet-3) and `src/index.html` containing [Snippet 4](#snippet-4). Install `serve` globally.\r\n\r\n```\r\nnpm install -g serve\r\n```\r\n\r\nServe the contents of the `src` folder.\r\n\r\n```\r\nserve src\r\n```\r\n\r\nVisit `localhost:3000` in your browser.\r\n\r\nSnippets\r\n--------\r\n\r\n### Snippet 1\r\n\r\n```js\r\nvar style                  = require('famous/core/famous.css') // needed by famous\r\nvar Plane                  = require('infamous/Plane')\r\nvar contextWithPerspective = require('infamous/utils').contextWithPerspective\r\n\r\nvar ctx = contextWithPerspective(1000)\r\nvar square = new Plane({\r\n    size: [200,200],\r\n    content: 'Hello.',\r\n    properties: {\r\n        backfaceVisibility: 'visible',\r\n        background: 'pink',\r\n        padding: '5px'\r\n    }\r\n})\r\n\r\nctx.add(square)\r\nsquare.transform.setRotate([0,2*Math.PI,0], {duration: 5000, curve: 'easeInOut'})\r\n```\r\n\r\n### Snippet 2\r\n\r\n```html\r\n<!-- public/index.html -->\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <title>Project with infamous</title>\r\n        <meta charset=\"utf-8\" />\r\n    </head>\r\n    <body>\r\n        <script type=\"text/javascript\" charset=\"utf-8\" src=\"app.js\"></script>\r\n    </body>\r\n</html>\r\n```\r\n\r\n### Snippet 3\r\n\r\n```js\r\nimport 'famous/core/famous.css!'\r\n\r\nimport Plane from 'infamous/Plane'\r\nimport {contextWithPerspective} from 'infamous/utils'\r\n\r\nvar ctx = contextWithPerspective(1000)\r\nvar square = new Plane({\r\n    size: [200,200],\r\n    content: 'Hello.',\r\n    properties: {\r\n        backfaceVisibility: 'visible',\r\n        background: 'pink',\r\n        padding: '5px'\r\n    }\r\n})\r\n\r\nctx.add(square)\r\nsquare.transform.setRotate([0,2*Math.PI,0], {duration: 5000, curve: 'easeInOut'})\r\n```\r\n\r\n### Snippet 4\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <title>Project with infamous</title>\r\n        <meta charset=\"utf-8\" />\r\n    </head>\r\n    <body>\r\n        <script src='jspm_packages/system.src.js'></script>\r\n        <script src='config.js'></script>\r\n        <script type=\"module\">\r\n            System.import('app');\r\n        </script>\r\n    </body>\r\n</html>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}